//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BillingClient.Service {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://billingsystem.org/", ConfigurationName="Service.MarketBillingSystemSoap")]
    public interface MarketBillingSystemSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/IsServiceAvailable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsServiceAvailable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/IsServiceAvailable", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsServiceAvailableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/ListProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ListProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/ListProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ListProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetListInvalidItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetListInvalidItems(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetListInvalidItems", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetListInvalidItemsAsync(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetListValidItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetListValidItems(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetListValidItems", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetListValidItemsAsync(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetReceipt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetReceipt(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetReceipt", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetReceiptAsync(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetCostGrandTotal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCostGrandTotal(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/GetCostGrandTotal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCostGrandTotalAsync(string strstrCartInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/UpdateProductDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductDetails(string ItemId, string NumOfItemsOffer, string ItemsOfferPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://billingsystem.org/UpdateProductDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductDetailsAsync(string ItemId, string NumOfItemsOffer, string ItemsOfferPrice);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MarketBillingSystemSoapChannel : BillingClient.Service.MarketBillingSystemSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarketBillingSystemSoapClient : System.ServiceModel.ClientBase<BillingClient.Service.MarketBillingSystemSoap>, BillingClient.Service.MarketBillingSystemSoap {
        
        public MarketBillingSystemSoapClient() {
        }
        
        public MarketBillingSystemSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MarketBillingSystemSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketBillingSystemSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketBillingSystemSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsServiceAvailable() {
            return base.Channel.IsServiceAvailable();
        }
        
        public System.Threading.Tasks.Task<bool> IsServiceAvailableAsync() {
            return base.Channel.IsServiceAvailableAsync();
        }
        
        public System.Data.DataTable ListProducts() {
            return base.Channel.ListProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ListProductsAsync() {
            return base.Channel.ListProductsAsync();
        }
        
        public string[] GetListInvalidItems(string strstrCartInput) {
            return base.Channel.GetListInvalidItems(strstrCartInput);
        }
        
        public System.Threading.Tasks.Task<string[]> GetListInvalidItemsAsync(string strstrCartInput) {
            return base.Channel.GetListInvalidItemsAsync(strstrCartInput);
        }
        
        public string[] GetListValidItems(string strstrCartInput) {
            return base.Channel.GetListValidItems(strstrCartInput);
        }
        
        public System.Threading.Tasks.Task<string[]> GetListValidItemsAsync(string strstrCartInput) {
            return base.Channel.GetListValidItemsAsync(strstrCartInput);
        }
        
        public System.Data.DataTable GetReceipt(string strstrCartInput) {
            return base.Channel.GetReceipt(strstrCartInput);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetReceiptAsync(string strstrCartInput) {
            return base.Channel.GetReceiptAsync(strstrCartInput);
        }
        
        public string GetCostGrandTotal(string strstrCartInput) {
            return base.Channel.GetCostGrandTotal(strstrCartInput);
        }
        
        public System.Threading.Tasks.Task<string> GetCostGrandTotalAsync(string strstrCartInput) {
            return base.Channel.GetCostGrandTotalAsync(strstrCartInput);
        }
        
        public string UpdateProductDetails(string ItemId, string NumOfItemsOffer, string ItemsOfferPrice) {
            return base.Channel.UpdateProductDetails(ItemId, NumOfItemsOffer, ItemsOfferPrice);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductDetailsAsync(string ItemId, string NumOfItemsOffer, string ItemsOfferPrice) {
            return base.Channel.UpdateProductDetailsAsync(ItemId, NumOfItemsOffer, ItemsOfferPrice);
        }
    }
}
